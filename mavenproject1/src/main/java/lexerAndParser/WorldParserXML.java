
//----------------------------------------------------
// The following code was generated by CUP v0.11b 20160615 (GIT 4ac7450)
//----------------------------------------------------

package lexerAndParser;

import java_cup.runtime.Symbol;
import Objects.*;
import java.util.ArrayList;
import java.util.List;
import java_cup.runtime.XMLElement;

/** CUP v0.11b 20160615 (GIT 4ac7450) generated parser.
  */
@SuppressWarnings({"rawtypes"})
public class WorldParserXML extends java_cup.runtime.lr_parser {

 public final Class getSymbolContainer() {
    return WorldParserXMLSym.class;
}

  /** Default constructor. */
  @Deprecated
  public WorldParserXML() {super();}

  /** Constructor which sets the default scanner. */
  @Deprecated
  public WorldParserXML(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public WorldParserXML(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\067\000\002\002\003\000\002\002\004\000\002\002" +
    "\003\000\002\041\007\000\002\043\004\000\002\043\003" +
    "\000\002\042\011\000\002\003\007\000\002\004\004\000" +
    "\002\004\006\000\002\005\012\000\002\006\004\000\002" +
    "\006\003\000\002\033\003\000\002\033\003\000\002\033" +
    "\003\000\002\012\004\000\002\012\003\000\002\013\006" +
    "\000\002\013\006\000\002\013\006\000\002\013\006\000" +
    "\002\013\006\000\002\032\011\000\002\036\011\000\002" +
    "\035\011\000\002\007\006\000\002\010\004\000\002\010" +
    "\003\000\002\011\006\000\002\011\006\000\002\011\006" +
    "\000\002\011\006\000\002\011\006\000\002\011\006\000" +
    "\002\011\006\000\002\014\006\000\002\015\006\000\002" +
    "\016\006\000\002\017\006\000\002\020\006\000\002\021" +
    "\006\000\002\022\006\000\002\023\006\000\002\024\007" +
    "\000\002\025\006\000\002\026\003\000\002\026\003\000" +
    "\002\031\006\000\002\030\006\000\002\027\006\000\002" +
    "\034\004\000\002\034\004\000\002\037\011\000\002\040" +
    "\011" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\265\000\004\007\005\001\002\000\004\002\267\001" +
    "\002\000\004\004\010\001\002\000\004\002\uffff\001\002" +
    "\000\004\002\001\001\002\000\004\011\011\001\002\000" +
    "\004\005\012\001\002\000\004\004\015\001\002\000\004" +
    "\002\ufffa\001\002\000\006\002\ufffe\004\263\001\002\000" +
    "\004\010\255\001\002\000\006\002\ufffc\004\ufffc\001\002" +
    "\000\006\004\022\006\021\001\002\000\004\002\ufff9\001" +
    "\002\000\004\011\253\001\002\000\004\010\023\001\002" +
    "\000\004\005\024\001\002\000\004\004\030\001\002\000" +
    "\004\004\ufff5\001\002\000\004\004\ufff4\001\002\000\004" +
    "\004\057\001\002\000\010\012\035\013\033\014\034\001" +
    "\002\000\004\004\ufff3\001\002\000\004\004\ufff2\001\002" +
    "\000\004\005\050\001\002\000\004\005\043\001\002\000" +
    "\004\005\036\001\002\000\004\030\037\001\002\000\004" +
    "\006\040\001\002\000\004\012\041\001\002\000\004\005" +
    "\042\001\002\000\004\004\uffea\001\002\000\004\041\044" +
    "\001\002\000\004\006\045\001\002\000\004\014\046\001" +
    "\002\000\004\005\047\001\002\000\004\004\uffe8\001\002" +
    "\000\004\041\051\001\002\000\004\006\052\001\002\000" +
    "\004\013\053\001\002\000\004\005\054\001\002\000\004" +
    "\004\uffe9\001\002\000\006\004\247\006\246\001\002\000" +
    "\004\004\ufff6\001\002\000\022\012\035\013\033\014\034" +
    "\015\061\031\064\034\063\036\065\037\062\001\002\000" +
    "\006\004\ufff0\006\ufff0\001\002\000\004\005\154\001\002" +
    "\000\004\005\146\001\002\000\004\005\140\001\002\000" +
    "\004\005\117\001\002\000\004\005\066\001\002\000\004" +
    "\004\070\001\002\000\004\004\115\001\002\000\006\032" +
    "\107\033\076\001\002\000\004\006\104\001\002\000\006" +
    "\004\uffec\006\uffec\001\002\000\004\004\075\001\002\000" +
    "\006\004\uffcd\006\uffcd\001\002\000\004\033\076\001\002" +
    "\000\004\005\077\001\002\000\004\041\100\001\002\000" +
    "\004\006\101\001\002\000\004\033\102\001\002\000\004" +
    "\005\103\001\002\000\006\004\uffcc\006\uffcc\001\002\000" +
    "\004\036\105\001\002\000\004\005\106\001\002\000\006" +
    "\004\uffd0\006\uffd0\001\002\000\004\005\110\001\002\000" +
    "\004\041\111\001\002\000\004\006\112\001\002\000\004" +
    "\032\113\001\002\000\004\005\114\001\002\000\006\004" +
    "\uffcb\006\uffcb\001\002\000\004\032\107\001\002\000\006" +
    "\004\uffce\006\uffce\001\002\000\004\004\070\001\002\000" +
    "\006\004\uffee\006\uffee\001\002\000\004\006\135\001\002" +
    "\000\004\004\123\001\002\000\004\035\124\001\002\000" +
    "\004\005\125\001\002\000\006\025\131\026\127\001\002" +
    "\000\004\006\132\001\002\000\004\006\uffd2\001\002\000" +
    "\004\006\uffd5\001\002\000\004\006\uffd3\001\002\000\004" +
    "\035\133\001\002\000\004\005\134\001\002\000\004\006" +
    "\uffd4\001\002\000\004\031\136\001\002\000\004\005\137" +
    "\001\002\000\006\004\uffd6\006\uffd6\001\002\000\004\004" +
    "\070\001\002\000\006\004\uffed\006\uffed\001\002\000\004" +
    "\006\143\001\002\000\004\034\144\001\002\000\004\005" +
    "\145\001\002\000\006\004\uffd1\006\uffd1\001\002\000\004" +
    "\004\070\001\002\000\006\004\uffeb\006\uffeb\001\002\000" +
    "\004\006\151\001\002\000\004\037\152\001\002\000\004" +
    "\005\153\001\002\000\006\004\uffcf\006\uffcf\001\002\000" +
    "\004\004\160\001\002\000\006\004\160\006\243\001\002" +
    "\000\006\004\uffe5\006\uffe5\001\002\000\006\004\uffef\006" +
    "\uffef\001\002\000\020\016\161\017\164\020\166\021\167" +
    "\022\162\023\163\024\165\001\002\000\004\005\234\001" +
    "\002\000\004\005\226\001\002\000\004\005\220\001\002" +
    "\000\004\005\212\001\002\000\004\005\204\001\002\000" +
    "\004\005\176\001\002\000\004\005\170\001\002\000\004" +
    "\027\171\001\002\000\004\006\173\001\002\000\006\004" +
    "\uffe1\006\uffe1\001\002\000\004\021\174\001\002\000\004" +
    "\005\175\001\002\000\006\004\uffda\006\uffda\001\002\000" +
    "\004\027\177\001\002\000\004\006\201\001\002\000\006" +
    "\004\uffe2\006\uffe2\001\002\000\004\020\202\001\002\000" +
    "\004\005\203\001\002\000\006\004\uffdb\006\uffdb\001\002" +
    "\000\004\027\205\001\002\000\004\006\207\001\002\000" +
    "\006\004\uffde\006\uffde\001\002\000\004\024\210\001\002" +
    "\000\004\005\211\001\002\000\006\004\uffd7\006\uffd7\001" +
    "\002\000\004\027\213\001\002\000\004\006\215\001\002" +
    "\000\006\004\uffe3\006\uffe3\001\002\000\004\017\216\001" +
    "\002\000\004\005\217\001\002\000\006\004\uffdc\006\uffdc" +
    "\001\002\000\004\027\221\001\002\000\004\006\223\001" +
    "\002\000\006\004\uffdf\006\uffdf\001\002\000\004\023\224" +
    "\001\002\000\004\005\225\001\002\000\006\004\uffd8\006" +
    "\uffd8\001\002\000\004\027\227\001\002\000\004\006\231" +
    "\001\002\000\006\004\uffe0\006\uffe0\001\002\000\004\022" +
    "\232\001\002\000\004\005\233\001\002\000\006\004\uffd9" +
    "\006\uffd9\001\002\000\004\027\235\001\002\000\004\006" +
    "\237\001\002\000\006\004\uffe4\006\uffe4\001\002\000\004" +
    "\016\240\001\002\000\004\005\241\001\002\000\006\004" +
    "\uffdd\006\uffdd\001\002\000\006\004\uffe6\006\uffe6\001\002" +
    "\000\004\015\244\001\002\000\004\005\245\001\002\000" +
    "\006\004\uffe7\006\uffe7\001\002\000\004\010\251\001\002" +
    "\000\014\015\061\031\064\034\063\036\065\037\062\001" +
    "\002\000\006\004\ufff1\006\ufff1\001\002\000\004\005\252" +
    "\001\002\000\006\004\ufff7\006\ufff7\001\002\000\004\005" +
    "\254\001\002\000\004\002\ufff8\001\002\000\004\005\256" +
    "\001\002\000\006\004\030\030\257\001\002\000\004\006" +
    "\260\001\002\000\004\010\261\001\002\000\004\005\262" +
    "\001\002\000\006\002\ufffb\004\ufffb\001\002\000\004\010" +
    "\265\001\002\000\006\002\ufffd\004\ufffd\001\002\000\004" +
    "\005\266\001\002\000\004\030\257\001\002\000\004\002" +
    "\000\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\265\000\010\002\003\003\005\041\006\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\012\004" +
    "\012\005\016\042\015\043\013\001\001\000\002\001\001" +
    "\000\004\042\263\001\001\000\002\001\001\000\002\001" +
    "\001\000\006\004\017\005\016\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\014\006\026\032\025\033\024\035\031\036\030\001\001" +
    "\000\002\001\001\000\002\001\001\000\016\012\054\013" +
    "\057\032\025\033\055\035\031\036\030\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\013\247\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\012\030\071\034\070\037\066\040\072" +
    "\001\001\000\004\040\115\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\037\073\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\014" +
    "\023\117\024\120\034\121\037\066\040\072\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\006\025\127\026\125\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\012\031\140\034\141\037\066\040\072\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\012\027\146\034" +
    "\147\037\066\040\072\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\010\007\156\010\154\011\155\001\001\000\004" +
    "\011\241\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\017\171\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\016\177\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\022\205\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\015\213\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\021\221\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\020\227\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\014\235\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\014\006\026\032\025\033\024\035\031\036\030" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$WorldParserXML$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$WorldParserXML$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$WorldParserXML$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 1;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}




        private Symbol cur_token;
        private boolean parsed;
        private List<World> worlds = new ArrayList<World>();
        private World worldd;
        private Config configg;

	public WorldParserXML(WorldXmlLexer lex) {
        super(lex);
        // parsed
        this.parsed = true;
        System.out.println("--------world XML Constructor---------");
        this.worldd =  new World();
        this.configg = new Config();

        // Reporte de errores
        //this.handleErrors = new HandleError();
	}

	public void unrecovered_syntax_error(Symbol cur_token) {
        /* parsed */
        this.parsed = false;
        System.out.println("unrecovered_syntax_error");
        System.out.println("cur_token: " + symbl_name_from_id(cur_token.sym));
	}

	public void report_error(String message, Object info) {
        /* parsed */
        this.parsed = false;
        /**/
        System.out.println("report_error");
        System.out.println("Message: " + message);
        System.out.println("Object info: " + info);
	}

	public void report_fatal_error(String message, Object info) {
        /* parsed */
        this.parsed = false;
        System.out.println("report_fatal_error");
        System.out.println("Message: " + message);
        System.out.println("Object info: " + info);

        /* Armando reportes de errores */
        /*
        List<String> expected = new ArrayList<>();
        List<Integer> tokens = expected_token_ids();
        for(Integer i : tokens) {
                expected.add(symbl_name_from_id(i));
        }
        */
        /* Reporte de errores */
        //this.handleErrors.setError(cur_token, symbl_name_from_id(cur_token.sym), expected);
        
    }

	public void syntax_error(Symbol cur_token) {
        /* parsed */
        this.parsed = false;

        /* Symbol que provoca sintax_error */
        this.cur_token = cur_token;

        /* Armando reportes de errores */
        /*
        List<String> expected = new ArrayList<>();
        List<Integer> tokens = expected_token_ids();
        for(Integer i : tokens) {
                expected.add(symbl_name_from_id(i));
        }
        */
        /* Reporte de errores */
        //this.handleErrors.setError(cur_token, symbl_name_from_id(cur_token.sym), expected);
	}

	public Symbol getCur_token() {
                return this.cur_token;
    }

    protected int error_sync_size() {
                return 1;
	}

        /* Reports */
    public boolean isParsed() {
            return parsed;
    }
    public void setParsed(boolean estado){
        if(parsed)
                parsed = estado;
    }
    public void startWorld(){
        System.out.println("--------world XML startWorld---------");
        worldd.setConfig(configg);
        worlds.add(worldd);
        worldd =  new World();
        configg = new Config();
    }
    public List<World> getWorld(){
        return worlds;
    }



/** Cup generated class to encapsulate user supplied action code.*/
@SuppressWarnings({"rawtypes", "unchecked", "unused"})
class CUP$WorldParserXML$actions {
  private final WorldParserXML parser;

  /** Constructor */
  CUP$WorldParserXML$actions(WorldParserXML parser) {
    this.parser = parser;
  }

  /** Method 0 with the actual generated action code for actions 0 to 300. */
  public final java_cup.runtime.Symbol CUP$WorldParserXML$do_action_part00000000(
    int                        CUP$WorldParserXML$act_num,
    java_cup.runtime.lr_parser CUP$WorldParserXML$parser,
    java.util.Stack            CUP$WorldParserXML$stack,
    int                        CUP$WorldParserXML$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$WorldParserXML$result;

      /* select the action based on the action number */
      switch (CUP$WorldParserXML$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // peticion ::= nivel 
            {
              Object RESULT =null;

              CUP$WorldParserXML$result = parser.getSymbolFactory().newSymbol("peticion",0, ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.peek()), RESULT);
            }
          return CUP$WorldParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // $START ::= peticion EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.elementAt(CUP$WorldParserXML$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.elementAt(CUP$WorldParserXML$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$WorldParserXML$stack.elementAt(CUP$WorldParserXML$top-1)).value;
		RESULT = start_val;
              CUP$WorldParserXML$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.elementAt(CUP$WorldParserXML$top-1)), ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$WorldParserXML$parser.done_parsing();
          return CUP$WorldParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // peticion ::= worldss 
            {
              Object RESULT =null;

              CUP$WorldParserXML$result = parser.getSymbolFactory().newSymbol("peticion",0, ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.peek()), RESULT);
            }
          return CUP$WorldParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // nivel ::= I INICIAL WORLDS FINAL worldns 
            {
              Object RESULT =null;

              CUP$WorldParserXML$result = parser.getSymbolFactory().newSymbol("nivel",31, ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.elementAt(CUP$WorldParserXML$top-4)), ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.peek()), RESULT);
            }
          return CUP$WorldParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // worldns ::= worldns worldn 
            {
              Object RESULT =null;

              CUP$WorldParserXML$result = parser.getSymbolFactory().newSymbol("worldns",33, ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.elementAt(CUP$WorldParserXML$top-1)), ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.peek()), RESULT);
            }
          return CUP$WorldParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // worldns ::= worldn 
            {
              Object RESULT =null;

              CUP$WorldParserXML$result = parser.getSymbolFactory().newSymbol("worldns",33, ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.peek()), RESULT);
            }
          return CUP$WorldParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // worldn ::= INICIAL WORLD FINAL NAMEW CIERRE WORLD FINAL 
            {
              Object RESULT =null;
		int n1left = ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.elementAt(CUP$WorldParserXML$top-3)).left;
		int n1right = ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.elementAt(CUP$WorldParserXML$top-3)).right;
		String n1 = (String)((java_cup.runtime.Symbol) CUP$WorldParserXML$stack.elementAt(CUP$WorldParserXML$top-3)).value;

              CUP$WorldParserXML$result = parser.getSymbolFactory().newSymbol("worldn",32, ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.elementAt(CUP$WorldParserXML$top-6)), ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.peek()), RESULT);
            }
          return CUP$WorldParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // worldss ::= I INICIAL WORLDS FINAL worlds 
            {
              Object RESULT =null;

              CUP$WorldParserXML$result = parser.getSymbolFactory().newSymbol("worldss",1, ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.elementAt(CUP$WorldParserXML$top-4)), ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.peek()), RESULT);
            }
          return CUP$WorldParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // worlds ::= world worlds 
            {
              Object RESULT =null;

              CUP$WorldParserXML$result = parser.getSymbolFactory().newSymbol("worlds",2, ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.elementAt(CUP$WorldParserXML$top-1)), ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.peek()), RESULT);
            }
          return CUP$WorldParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // worlds ::= world CIERRE WORLDS FINAL 
            {
              Object RESULT =null;

              CUP$WorldParserXML$result = parser.getSymbolFactory().newSymbol("worlds",2, ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.elementAt(CUP$WorldParserXML$top-3)), ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.peek()), RESULT);
            }
          return CUP$WorldParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // world ::= INICIAL WORLD FINAL wd opcion CIERRE WORLD FINAL 
            {
              Object RESULT =null;
		 startWorld(); 
              CUP$WorldParserXML$result = parser.getSymbolFactory().newSymbol("world",3, ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.elementAt(CUP$WorldParserXML$top-7)), ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.peek()), RESULT);
            }
          return CUP$WorldParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // wd ::= wd w 
            {
              Object RESULT =null;

              CUP$WorldParserXML$result = parser.getSymbolFactory().newSymbol("wd",4, ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.elementAt(CUP$WorldParserXML$top-1)), ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.peek()), RESULT);
            }
          return CUP$WorldParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // wd ::= w 
            {
              Object RESULT =null;

              CUP$WorldParserXML$result = parser.getSymbolFactory().newSymbol("wd",4, ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.peek()), RESULT);
            }
          return CUP$WorldParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // w ::= name 
            {
              String RESULT =null;
		int n1left = ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.peek()).left;
		int n1right = ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.peek()).right;
		String n1 = (String)((java_cup.runtime.Symbol) CUP$WorldParserXML$stack.peek()).value;
		 worldd.setName(n1); 
              CUP$WorldParserXML$result = parser.getSymbolFactory().newSymbol("w",25, ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.peek()), RESULT);
            }
          return CUP$WorldParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // w ::= rows 
            {
              String RESULT =null;
		int n2left = ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.peek()).left;
		int n2right = ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.peek()).right;
		Integer n2 = (Integer)((java_cup.runtime.Symbol) CUP$WorldParserXML$stack.peek()).value;
		 worldd.setRows(n2); 
              CUP$WorldParserXML$result = parser.getSymbolFactory().newSymbol("w",25, ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.peek()), RESULT);
            }
          return CUP$WorldParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // w ::= cols 
            {
              String RESULT =null;
		int n3left = ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.peek()).left;
		int n3right = ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.peek()).right;
		Integer n3 = (Integer)((java_cup.runtime.Symbol) CUP$WorldParserXML$stack.peek()).value;
		 worldd.setCols(n3); 
              CUP$WorldParserXML$result = parser.getSymbolFactory().newSymbol("w",25, ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.peek()), RESULT);
            }
          return CUP$WorldParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // opcion ::= opcion op 
            {
              Object RESULT =null;

              CUP$WorldParserXML$result = parser.getSymbolFactory().newSymbol("opcion",8, ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.elementAt(CUP$WorldParserXML$top-1)), ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.peek()), RESULT);
            }
          return CUP$WorldParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // opcion ::= op 
            {
              Object RESULT =null;

              CUP$WorldParserXML$result = parser.getSymbolFactory().newSymbol("opcion",8, ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.peek()), RESULT);
            }
          return CUP$WorldParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // op ::= INICIAL CONFIG FINAL config 
            {
              Object RESULT =null;

              CUP$WorldParserXML$result = parser.getSymbolFactory().newSymbol("op",9, ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.elementAt(CUP$WorldParserXML$top-3)), ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.peek()), RESULT);
            }
          return CUP$WorldParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // op ::= INICIAL BOARD FINAL board 
            {
              Object RESULT =null;

              CUP$WorldParserXML$result = parser.getSymbolFactory().newSymbol("op",9, ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.elementAt(CUP$WorldParserXML$top-3)), ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.peek()), RESULT);
            }
          return CUP$WorldParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // op ::= INICIAL BOXES FINAL box 
            {
              Object RESULT =null;

              CUP$WorldParserXML$result = parser.getSymbolFactory().newSymbol("op",9, ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.elementAt(CUP$WorldParserXML$top-3)), ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.peek()), RESULT);
            }
          return CUP$WorldParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // op ::= INICIAL TARGETS FINAL target 
            {
              Object RESULT =null;

              CUP$WorldParserXML$result = parser.getSymbolFactory().newSymbol("op",9, ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.elementAt(CUP$WorldParserXML$top-3)), ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.peek()), RESULT);
            }
          return CUP$WorldParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // op ::= INICIAL PLAYER FINAL player 
            {
              Object RESULT =null;

              CUP$WorldParserXML$result = parser.getSymbolFactory().newSymbol("op",9, ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.elementAt(CUP$WorldParserXML$top-3)), ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.peek()), RESULT);
            }
          return CUP$WorldParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // name ::= INICIAL NAME FINAL NAMEW CIERRE NAME FINAL 
            {
              String RESULT =null;
		int n1left = ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.elementAt(CUP$WorldParserXML$top-3)).left;
		int n1right = ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.elementAt(CUP$WorldParserXML$top-3)).right;
		String n1 = (String)((java_cup.runtime.Symbol) CUP$WorldParserXML$stack.elementAt(CUP$WorldParserXML$top-3)).value;
		 RESULT = n1; 
              CUP$WorldParserXML$result = parser.getSymbolFactory().newSymbol("name",24, ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.elementAt(CUP$WorldParserXML$top-6)), ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.peek()), RESULT);
            }
          return CUP$WorldParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // rows ::= INICIAL ROWS FINAL ENTERO CIERRE ROWS FINAL 
            {
              Integer RESULT =null;
		int n2left = ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.elementAt(CUP$WorldParserXML$top-3)).left;
		int n2right = ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.elementAt(CUP$WorldParserXML$top-3)).right;
		Integer n2 = (Integer)((java_cup.runtime.Symbol) CUP$WorldParserXML$stack.elementAt(CUP$WorldParserXML$top-3)).value;
		System.out.println("--rows--"); 
                RESULT = n2; 
              CUP$WorldParserXML$result = parser.getSymbolFactory().newSymbol("rows",28, ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.elementAt(CUP$WorldParserXML$top-6)), ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.peek()), RESULT);
            }
          return CUP$WorldParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // cols ::= INICIAL COLS FINAL ENTERO CIERRE COLS FINAL 
            {
              Integer RESULT =null;
		int n3left = ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.elementAt(CUP$WorldParserXML$top-3)).left;
		int n3right = ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.elementAt(CUP$WorldParserXML$top-3)).right;
		Integer n3 = (Integer)((java_cup.runtime.Symbol) CUP$WorldParserXML$stack.elementAt(CUP$WorldParserXML$top-3)).value;
		RESULT = n3; 
              CUP$WorldParserXML$result = parser.getSymbolFactory().newSymbol("cols",27, ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.elementAt(CUP$WorldParserXML$top-6)), ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.peek()), RESULT);
            }
          return CUP$WorldParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // config ::= con CIERRE CONFIG FINAL 
            {
              Object RESULT =null;

              CUP$WorldParserXML$result = parser.getSymbolFactory().newSymbol("config",5, ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.elementAt(CUP$WorldParserXML$top-3)), ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.peek()), RESULT);
            }
          return CUP$WorldParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // con ::= con colorr 
            {
              Object RESULT =null;

              CUP$WorldParserXML$result = parser.getSymbolFactory().newSymbol("con",6, ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.elementAt(CUP$WorldParserXML$top-1)), ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.peek()), RESULT);
            }
          return CUP$WorldParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // con ::= colorr 
            {
              Object RESULT =null;

              CUP$WorldParserXML$result = parser.getSymbolFactory().newSymbol("con",6, ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.peek()), RESULT);
            }
          return CUP$WorldParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // colorr ::= INICIAL BOXC FINAL box_color 
            {
              Object RESULT =null;
		int n1left = ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.peek()).left;
		int n1right = ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.peek()).right;
		String n1 = (String)((java_cup.runtime.Symbol) CUP$WorldParserXML$stack.peek()).value;
		 configg.setBoxColor(n1); 
              CUP$WorldParserXML$result = parser.getSymbolFactory().newSymbol("colorr",7, ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.elementAt(CUP$WorldParserXML$top-3)), ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.peek()), RESULT);
            }
          return CUP$WorldParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // colorr ::= INICIAL BOXCPOS FINAL box_on_target_color 
            {
              Object RESULT =null;
		int n2left = ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.peek()).left;
		int n2right = ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.peek()).right;
		String n2 = (String)((java_cup.runtime.Symbol) CUP$WorldParserXML$stack.peek()).value;
		 configg.setBoxOnTargetColor(n2); 
              CUP$WorldParserXML$result = parser.getSymbolFactory().newSymbol("colorr",7, ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.elementAt(CUP$WorldParserXML$top-3)), ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.peek()), RESULT);
            }
          return CUP$WorldParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // colorr ::= INICIAL BOXCES FINAL target_color 
            {
              Object RESULT =null;
		int n3left = ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.peek()).left;
		int n3right = ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.peek()).right;
		String n3 = (String)((java_cup.runtime.Symbol) CUP$WorldParserXML$stack.peek()).value;
		 configg.setTargetColor(n3); 
              CUP$WorldParserXML$result = parser.getSymbolFactory().newSymbol("colorr",7, ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.elementAt(CUP$WorldParserXML$top-3)), ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.peek()), RESULT);
            }
          return CUP$WorldParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // colorr ::= INICIAL BRICKCOLOR FINAL brick_color 
            {
              Object RESULT =null;
		int n4left = ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.peek()).left;
		int n4right = ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.peek()).right;
		String n4 = (String)((java_cup.runtime.Symbol) CUP$WorldParserXML$stack.peek()).value;
		 configg.setBrickColor(n4); 
              CUP$WorldParserXML$result = parser.getSymbolFactory().newSymbol("colorr",7, ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.elementAt(CUP$WorldParserXML$top-3)), ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.peek()), RESULT);
            }
          return CUP$WorldParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // colorr ::= INICIAL HALLCOLOR FINAL hall_color 
            {
              Object RESULT =null;
		int n5left = ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.peek()).left;
		int n5right = ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.peek()).right;
		String n5 = (String)((java_cup.runtime.Symbol) CUP$WorldParserXML$stack.peek()).value;
		 configg.setHallColor(n5); 
              CUP$WorldParserXML$result = parser.getSymbolFactory().newSymbol("colorr",7, ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.elementAt(CUP$WorldParserXML$top-3)), ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.peek()), RESULT);
            }
          return CUP$WorldParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // colorr ::= INICIAL UNDEFINEDCOLOR FINAL undefined_color 
            {
              Object RESULT =null;
		int n6left = ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.peek()).left;
		int n6right = ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.peek()).right;
		String n6 = (String)((java_cup.runtime.Symbol) CUP$WorldParserXML$stack.peek()).value;
		 configg.setUndefinedColor(n6); 
              CUP$WorldParserXML$result = parser.getSymbolFactory().newSymbol("colorr",7, ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.elementAt(CUP$WorldParserXML$top-3)), ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.peek()), RESULT);
            }
          return CUP$WorldParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // colorr ::= INICIAL PLAYERCOLOR FINAL player_color 
            {
              Object RESULT =null;
		int n7left = ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.peek()).left;
		int n7right = ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.peek()).right;
		String n7 = (String)((java_cup.runtime.Symbol) CUP$WorldParserXML$stack.peek()).value;
		 configg.setPlayerColor(n7); 
              CUP$WorldParserXML$result = parser.getSymbolFactory().newSymbol("colorr",7, ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.elementAt(CUP$WorldParserXML$top-3)), ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.peek()), RESULT);
            }
          return CUP$WorldParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // box_color ::= COLOR CIERRE BOXC FINAL 
            {
              String RESULT =null;
		int n7left = ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.elementAt(CUP$WorldParserXML$top-3)).left;
		int n7right = ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.elementAt(CUP$WorldParserXML$top-3)).right;
		String n7 = (String)((java_cup.runtime.Symbol) CUP$WorldParserXML$stack.elementAt(CUP$WorldParserXML$top-3)).value;
		 RESULT = n7; 
              CUP$WorldParserXML$result = parser.getSymbolFactory().newSymbol("box_color",10, ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.elementAt(CUP$WorldParserXML$top-3)), ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.peek()), RESULT);
            }
          return CUP$WorldParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // box_on_target_color ::= COLOR CIERRE BOXCPOS FINAL 
            {
              String RESULT =null;
		int n1left = ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.elementAt(CUP$WorldParserXML$top-3)).left;
		int n1right = ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.elementAt(CUP$WorldParserXML$top-3)).right;
		String n1 = (String)((java_cup.runtime.Symbol) CUP$WorldParserXML$stack.elementAt(CUP$WorldParserXML$top-3)).value;
		 RESULT = n1; 
              CUP$WorldParserXML$result = parser.getSymbolFactory().newSymbol("box_on_target_color",11, ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.elementAt(CUP$WorldParserXML$top-3)), ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.peek()), RESULT);
            }
          return CUP$WorldParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // target_color ::= COLOR CIERRE BOXCES FINAL 
            {
              String RESULT =null;
		int n2left = ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.elementAt(CUP$WorldParserXML$top-3)).left;
		int n2right = ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.elementAt(CUP$WorldParserXML$top-3)).right;
		String n2 = (String)((java_cup.runtime.Symbol) CUP$WorldParserXML$stack.elementAt(CUP$WorldParserXML$top-3)).value;
		 RESULT = n2; 
              CUP$WorldParserXML$result = parser.getSymbolFactory().newSymbol("target_color",12, ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.elementAt(CUP$WorldParserXML$top-3)), ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.peek()), RESULT);
            }
          return CUP$WorldParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // brick_color ::= COLOR CIERRE BRICKCOLOR FINAL 
            {
              String RESULT =null;
		int n3left = ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.elementAt(CUP$WorldParserXML$top-3)).left;
		int n3right = ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.elementAt(CUP$WorldParserXML$top-3)).right;
		String n3 = (String)((java_cup.runtime.Symbol) CUP$WorldParserXML$stack.elementAt(CUP$WorldParserXML$top-3)).value;
		 RESULT = n3; 
              CUP$WorldParserXML$result = parser.getSymbolFactory().newSymbol("brick_color",13, ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.elementAt(CUP$WorldParserXML$top-3)), ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.peek()), RESULT);
            }
          return CUP$WorldParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // hall_color ::= COLOR CIERRE HALLCOLOR FINAL 
            {
              String RESULT =null;
		int n4left = ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.elementAt(CUP$WorldParserXML$top-3)).left;
		int n4right = ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.elementAt(CUP$WorldParserXML$top-3)).right;
		String n4 = (String)((java_cup.runtime.Symbol) CUP$WorldParserXML$stack.elementAt(CUP$WorldParserXML$top-3)).value;
		 RESULT = n4; 
              CUP$WorldParserXML$result = parser.getSymbolFactory().newSymbol("hall_color",14, ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.elementAt(CUP$WorldParserXML$top-3)), ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.peek()), RESULT);
            }
          return CUP$WorldParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // undefined_color ::= COLOR CIERRE UNDEFINEDCOLOR FINAL 
            {
              String RESULT =null;
		int n5left = ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.elementAt(CUP$WorldParserXML$top-3)).left;
		int n5right = ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.elementAt(CUP$WorldParserXML$top-3)).right;
		String n5 = (String)((java_cup.runtime.Symbol) CUP$WorldParserXML$stack.elementAt(CUP$WorldParserXML$top-3)).value;
		 RESULT = n5; 
              CUP$WorldParserXML$result = parser.getSymbolFactory().newSymbol("undefined_color",15, ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.elementAt(CUP$WorldParserXML$top-3)), ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.peek()), RESULT);
            }
          return CUP$WorldParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // player_color ::= COLOR CIERRE PLAYERCOLOR FINAL 
            {
              String RESULT =null;
		int n6left = ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.elementAt(CUP$WorldParserXML$top-3)).left;
		int n6right = ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.elementAt(CUP$WorldParserXML$top-3)).right;
		String n6 = (String)((java_cup.runtime.Symbol) CUP$WorldParserXML$stack.elementAt(CUP$WorldParserXML$top-3)).value;
		 RESULT = n6; 
              CUP$WorldParserXML$result = parser.getSymbolFactory().newSymbol("player_color",16, ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.elementAt(CUP$WorldParserXML$top-3)), ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.peek()), RESULT);
            }
          return CUP$WorldParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // board ::= piece CIERRE BOARD FINAL 
            {
              Object RESULT =null;

              CUP$WorldParserXML$result = parser.getSymbolFactory().newSymbol("board",17, ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.elementAt(CUP$WorldParserXML$top-3)), ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.peek()), RESULT);
            }
          return CUP$WorldParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // piece ::= posicion INICIAL TYPE FINAL type 
            {
              Object RESULT =null;
		int pleft = ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.elementAt(CUP$WorldParserXML$top-4)).left;
		int pright = ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.elementAt(CUP$WorldParserXML$top-4)).right;
		Posicion p = (Posicion)((java_cup.runtime.Symbol) CUP$WorldParserXML$stack.elementAt(CUP$WorldParserXML$top-4)).value;
		int h1left = ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.peek()).left;
		int h1right = ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.peek()).right;
		Object h1 = (Object)((java_cup.runtime.Symbol) CUP$WorldParserXML$stack.peek()).value;
		  worldd.createPiece( new Piece(p.getPosX(),p.getPosY(),(String)h1) ); 
              CUP$WorldParserXML$result = parser.getSymbolFactory().newSymbol("piece",18, ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.elementAt(CUP$WorldParserXML$top-4)), ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.peek()), RESULT);
            }
          return CUP$WorldParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // type ::= ty CIERRE TYPE FINAL 
            {
              Object RESULT =null;
		int h1left = ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.elementAt(CUP$WorldParserXML$top-3)).left;
		int h1right = ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.elementAt(CUP$WorldParserXML$top-3)).right;
		Object h1 = (Object)((java_cup.runtime.Symbol) CUP$WorldParserXML$stack.elementAt(CUP$WorldParserXML$top-3)).value;
		RESULT = h1; 
              CUP$WorldParserXML$result = parser.getSymbolFactory().newSymbol("type",19, ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.elementAt(CUP$WorldParserXML$top-3)), ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.peek()), RESULT);
            }
          return CUP$WorldParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // ty ::= HALL 
            {
              Object RESULT =null;
		int h1left = ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.peek()).left;
		int h1right = ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.peek()).right;
		Object h1 = (Object)((java_cup.runtime.Symbol) CUP$WorldParserXML$stack.peek()).value;
		 RESULT = h1; 
              CUP$WorldParserXML$result = parser.getSymbolFactory().newSymbol("ty",20, ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.peek()), RESULT);
            }
          return CUP$WorldParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // ty ::= BRICK 
            {
              Object RESULT =null;
		int h2left = ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.peek()).left;
		int h2right = ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.peek()).right;
		Object h2 = (Object)((java_cup.runtime.Symbol) CUP$WorldParserXML$stack.peek()).value;
		 RESULT = h2; 
              CUP$WorldParserXML$result = parser.getSymbolFactory().newSymbol("ty",20, ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.peek()), RESULT);
            }
          return CUP$WorldParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // box ::= posicion CIERRE BOXES FINAL 
            {
              Object RESULT =null;
		int pleft = ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.elementAt(CUP$WorldParserXML$top-3)).left;
		int pright = ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.elementAt(CUP$WorldParserXML$top-3)).right;
		Posicion p = (Posicion)((java_cup.runtime.Symbol) CUP$WorldParserXML$stack.elementAt(CUP$WorldParserXML$top-3)).value;
		 worldd.createBox(new Box(p.getPosX(),p.getPosY())); 
              CUP$WorldParserXML$result = parser.getSymbolFactory().newSymbol("box",23, ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.elementAt(CUP$WorldParserXML$top-3)), ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.peek()), RESULT);
            }
          return CUP$WorldParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // target ::= posicion CIERRE TARGETS FINAL 
            {
              Object RESULT =null;
		int pleft = ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.elementAt(CUP$WorldParserXML$top-3)).left;
		int pright = ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.elementAt(CUP$WorldParserXML$top-3)).right;
		Posicion p = (Posicion)((java_cup.runtime.Symbol) CUP$WorldParserXML$stack.elementAt(CUP$WorldParserXML$top-3)).value;
		 worldd.createTarget(new Target(p.getPosX(),p.getPosY())); 
              CUP$WorldParserXML$result = parser.getSymbolFactory().newSymbol("target",22, ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.elementAt(CUP$WorldParserXML$top-3)), ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.peek()), RESULT);
            }
          return CUP$WorldParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // player ::= posicion CIERRE PLAYER FINAL 
            {
              Object RESULT =null;
		int pleft = ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.elementAt(CUP$WorldParserXML$top-3)).left;
		int pright = ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.elementAt(CUP$WorldParserXML$top-3)).right;
		Posicion p = (Posicion)((java_cup.runtime.Symbol) CUP$WorldParserXML$stack.elementAt(CUP$WorldParserXML$top-3)).value;
		 worldd.createPlayer(new Player(p.getPosX(),p.getPosY()) ); 
              CUP$WorldParserXML$result = parser.getSymbolFactory().newSymbol("player",21, ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.elementAt(CUP$WorldParserXML$top-3)), ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.peek()), RESULT);
            }
          return CUP$WorldParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // posicion ::= posx posy 
            {
              Posicion RESULT =null;
		int nxleft = ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.elementAt(CUP$WorldParserXML$top-1)).left;
		int nxright = ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.elementAt(CUP$WorldParserXML$top-1)).right;
		Integer nx = (Integer)((java_cup.runtime.Symbol) CUP$WorldParserXML$stack.elementAt(CUP$WorldParserXML$top-1)).value;
		int nyleft = ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.peek()).left;
		int nyright = ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.peek()).right;
		Integer ny = (Integer)((java_cup.runtime.Symbol) CUP$WorldParserXML$stack.peek()).value;
		RESULT = new Posicion(nx,ny); 
              CUP$WorldParserXML$result = parser.getSymbolFactory().newSymbol("posicion",26, ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.elementAt(CUP$WorldParserXML$top-1)), ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.peek()), RESULT);
            }
          return CUP$WorldParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // posicion ::= posy posx 
            {
              Posicion RESULT =null;
		int nyleft = ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.elementAt(CUP$WorldParserXML$top-1)).left;
		int nyright = ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.elementAt(CUP$WorldParserXML$top-1)).right;
		Integer ny = (Integer)((java_cup.runtime.Symbol) CUP$WorldParserXML$stack.elementAt(CUP$WorldParserXML$top-1)).value;
		int nxleft = ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.peek()).left;
		int nxright = ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.peek()).right;
		Integer nx = (Integer)((java_cup.runtime.Symbol) CUP$WorldParserXML$stack.peek()).value;
		RESULT = new Posicion(nx,ny); 
              CUP$WorldParserXML$result = parser.getSymbolFactory().newSymbol("posicion",26, ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.elementAt(CUP$WorldParserXML$top-1)), ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.peek()), RESULT);
            }
          return CUP$WorldParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 53: // posx ::= INICIAL POSX FINAL ENTERO CIERRE POSX FINAL 
            {
              Integer RESULT =null;
		int nx1left = ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.elementAt(CUP$WorldParserXML$top-3)).left;
		int nx1right = ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.elementAt(CUP$WorldParserXML$top-3)).right;
		Integer nx1 = (Integer)((java_cup.runtime.Symbol) CUP$WorldParserXML$stack.elementAt(CUP$WorldParserXML$top-3)).value;
		 RESULT = nx1 ; 
              CUP$WorldParserXML$result = parser.getSymbolFactory().newSymbol("posx",29, ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.elementAt(CUP$WorldParserXML$top-6)), ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.peek()), RESULT);
            }
          return CUP$WorldParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 54: // posy ::= INICIAL POSY FINAL ENTERO CIERRE POSY FINAL 
            {
              Integer RESULT =null;
		int ny1left = ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.elementAt(CUP$WorldParserXML$top-3)).left;
		int ny1right = ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.elementAt(CUP$WorldParserXML$top-3)).right;
		Integer ny1 = (Integer)((java_cup.runtime.Symbol) CUP$WorldParserXML$stack.elementAt(CUP$WorldParserXML$top-3)).value;
		 RESULT = ny1; 
              CUP$WorldParserXML$result = parser.getSymbolFactory().newSymbol("posy",30, ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.elementAt(CUP$WorldParserXML$top-6)), ((java_cup.runtime.Symbol)CUP$WorldParserXML$stack.peek()), RESULT);
            }
          return CUP$WorldParserXML$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number "+CUP$WorldParserXML$act_num+"found in internal parse table");

        }
    } /* end of method */

  /** Method splitting the generated action code into several parts. */
  public final java_cup.runtime.Symbol CUP$WorldParserXML$do_action(
    int                        CUP$WorldParserXML$act_num,
    java_cup.runtime.lr_parser CUP$WorldParserXML$parser,
    java.util.Stack            CUP$WorldParserXML$stack,
    int                        CUP$WorldParserXML$top)
    throws java.lang.Exception
    {
              return CUP$WorldParserXML$do_action_part00000000(
                               CUP$WorldParserXML$act_num,
                               CUP$WorldParserXML$parser,
                               CUP$WorldParserXML$stack,
                               CUP$WorldParserXML$top);
    }
}

}
